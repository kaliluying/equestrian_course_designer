"""
Django settings for equestrian project.

Generated by 'django-admin startproject' using Django 5.1.3.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""

from datetime import timedelta
from pathlib import Path
import os
# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-p_%_x$&etn*k5*mikk9o=^shm3@0w+l+8kccf3hpe-gr8kjw-$'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['*']

# Application definition

INSTALLED_APPS = [
    'simpleui',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'rest_framework',
    'corsheaders',
    'channels',
    "user.apps.UserConfig",
    'feedback',  # 新增反馈应用
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'user.middleware.TokenAuthenticationMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
]

ROOT_URLCONF = 'equestrian.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'equestrian.wsgi.application'

# Channels配置
ASGI_APPLICATION = 'equestrian.asgi.application'
CHANNEL_LAYERS = {
    'default': {
        'BACKEND': 'channels.layers.InMemoryChannelLayer',
    },
}

# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': 'equestrian',
        'USER': 'root',
        'PASSWORD': '176294955ll',
        'HOST': '127.0.0.1',
        'PORT': '3306',
    }
}

# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = 'zh-hans'

TIME_ZONE = 'Asia/Shanghai'

USE_I18N = True

USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/

STATIC_URL = 'static/'
# STATIC_ROOT = os.path.join(BASE_DIR, 'static')
STATICFILES_DIRS = [
    os.path.join(BASE_DIR, 'static'),
]

# Media files
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')
MEDIA_URL = '/media/'

# 站点域名配置，用于媒体文件URL生成
SITE_DOMAIN = os.environ.get('SITE_DOMAIN', '192.168.1.6:8000')
USE_HTTPS = os.environ.get('USE_HTTPS', 'False').lower() == 'true'

# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# 隐藏右侧SimpleUI广告链接和使用分析
SIMPLEUI_HOME_INFO = False
SIMPLEUI_ANALYSIS = False

# SIMPLEUI_HOME_QUICK = False
SIMPLEUI_HOME_ACTION = False

SIMPLEUI_INDEX = 'https://kaliluying.github.io/'

SIMPLEUI_HOME_PAGE = '/api/feedback/dashboard'

# DRF配置
REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'rest_framework_simplejwt.authentication.JWTAuthentication',
    ),
    'DEFAULT_PERMISSION_CLASSES': (
        'rest_framework.permissions.IsAuthenticated',
    ),
    'DEFAULT_PAGINATION_CLASS': 'rest_framework.pagination.PageNumberPagination',
    'PAGE_SIZE': 9,  # 每页显示9条记录
}

# JWT配置
SIMPLE_JWT = {
    'ACCESS_TOKEN_LIFETIME': timedelta(days=7),  # 访问令牌过期时间改为7天
    'REFRESH_TOKEN_LIFETIME': timedelta(days=30),  # 刷新令牌过期时间改为30天
    'ROTATE_REFRESH_TOKENS': True,  # 开启刷新令牌自动更新
    'BLACKLIST_AFTER_ROTATION': True,
    'UPDATE_LAST_LOGIN': True,

    'ALGORITHM': 'HS256',
    'SIGNING_KEY': SECRET_KEY,
    'VERIFYING_KEY': None,
    'AUDIENCE': None,
    'ISSUER': None,

    'AUTH_HEADER_TYPES': ('Bearer',),
    'AUTH_HEADER_NAME': 'HTTP_AUTHORIZATION',
    'USER_ID_FIELD': 'id',
    'USER_ID_CLAIM': 'user_id',
}

# CSRF配置
CSRF_COOKIE_SECURE = False  # 开发环境设为False，生产环境设为True
CSRF_COOKIE_HTTPONLY = False  # 允许JavaScript访问CSRF cookie
CSRF_COOKIE_SAMESITE = 'Lax'  # 允许跨站请求携带cookie
CSRF_TRUSTED_ORIGINS = [
    "http://localhost:5173",
    "http://127.0.0.1:5173",
    "http://localhost:8080",
    "http://127.0.0.1:8080",
    "http://192.168.1.6:5173",
    "http://192.168.1.6:8080",
    "https://equestrian.top"
]

# CORS配置
CORS_ALLOWED_ORIGINS = [
    "http://localhost:5173",  # Vite默认开发服务器
    "http://127.0.0.1:5173",
    "http://localhost:8080",
    "http://127.0.0.1:8080",
    "http://192.168.1.6:5173",
    "http://192.168.1.6:8080",
    "https://equestrian.top"
]

# 允许跨域请求携带cookie
CORS_ALLOW_CREDENTIALS = True

# 允许的HTTP方法
CORS_ALLOW_METHODS = [
    'DELETE',
    'GET',
    'OPTIONS',
    'PATCH',
    'POST',
    'PUT',
]

# 允许的HTTP头
CORS_ALLOW_HEADERS = [
    'accept',
    'accept-encoding',
    'authorization',
    'content-type',
    'dnt',
    'origin',
    'user-agent',
    'x-csrftoken',
    'x-requested-with',
]

# 前端URL配置
FRONTEND_URL = 'http://192.168.1.6:5173'  # 开发环境
# FRONTEND_URL = 'https://equestrian.top'  # 生产环境


# 邮件配置
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'  # 默认的SMTP后端
EMAIL_HOST = 'smtp.gmail.com'            # Gmail SMTP服务器地址
EMAIL_PORT = 587                         # TLS加密端口
EMAIL_USE_TLS = True                     # 启用TLS加密
EMAIL_HOST_USER = 'kaliluying@gmail.com'       # 你的Gmail邮箱地址
EMAIL_HOST_PASSWORD = 'wzeh vduq wxma zrap'  # 应用专用密码（非邮箱登录密码）

# WebSocket配置
ALLOWED_HOSTS = ['*']  # 允许所有主机访问，生产环境应该限制

# 日志配置
LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'formatters': {
        'verbose': {
            'format': '{levelname} {asctime} {module} {message}',
            'style': '{',
        },
    },
    'handlers': {
        'console': {
            'level': 'DEBUG',
            'class': 'logging.StreamHandler',
            'formatter': 'verbose',
        },
    },
    'loggers': {
        'django': {
            'handlers': ['console'],
            'level': 'INFO',
            'propagate': True,
        },
        'django.channels': {
            'handlers': ['console'],
            'level': 'DEBUG',
            'propagate': False,
        },
    },
}

# 支付宝配置
ALIPAY_APPID = '9021000144617885'  # 替换为实际的支付宝应用ID
ALIPAY_APP_PRIVATE_KEY_PATH = os.path.join(
    BASE_DIR, 'equestrian/keys/app_private_key.pem')
ALIPAY_ALIPAY_PUBLIC_KEY_PATH = os.path.join(
    BASE_DIR, 'equestrian/keys/alipay_public_key.pem')
ALIPAY_NOTIFY_URL = f"{SITE_DOMAIN}/api/payment/alipay/notify/"
ALIPAY_RETURN_URL = f"{SITE_DOMAIN}/payment/success/"
ALIPAY_DEBUG = True  # 开发环境使用沙箱模式
